function e(e="",t="extension",r=((e="")=>e),i={},s={}){const n=e.includes("\r"),l=n?"\r\n":"\n",o=(e.match(/`{3,3}[^`]+`{3,3}(\r?\n)?/g)||[]).reduce(((e,t)=>e.replace(t,"")),e).match(/(\s+|\t+)?\>\[\!.*\r?\n((\s+|\t+)?\>[^\[].*\r?\n?){1,}/g)||[],c=Object.keys(i).filter((e=>"VIDEO"===i[e]))[0]||"VIDEO",a=new RegExp(`(?<!\`\`\`\\r?\\n(\\s+|\\t+)?)\\>\\[\\!${c}\\]\\((.*)\\)`,"g");let p=e;for(const e of o){const o=e.split(n?/\r\n/:/\n/).filter((e=>e.length>0&&/[^\s]+/.test(e))),c=(o[0].match(/\>\[\!(.*)\]/)||[])[1]||"",a=o[0].replace(/\>\[.*/,""),$=`${l}${a}`,d=r(o.slice(1,o.length).map((e=>e.replace(/^(\s+|\t+)?\>/,"").trim())).filter(((e,t)=>0!==t||e.length>0)).join(l).trim()).split(l).map((e=>`${a}${e}`)).join(l),m=(c in i?i[c]:c).toLowerCase().replace(/\s/g,"");p=p.replace(o.join(l),`${a}<div class="${t} ${m}">${$}<div>${c in s?s[c]:c}</div>${$}<div>${l}${d}${$}</div>${$}</div>${l}`)}return p=p.replace(a,`<div class="${t} video"><iframe allowfullscreen embedded-video src="$2" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"><source src="$2" type="" /><p>Your browser does not support the iframe element.</p></iframe></div>`),p.trim()}export{e as afm};