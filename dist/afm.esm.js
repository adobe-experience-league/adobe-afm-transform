function e(e=""){return JSON.parse(JSON.stringify(e))}function n(e=""){return e.replace(/[\-\[\]{}()*+?.,\\\^\$|#]/g,"\\$&")}function t(e="",n="",t=[],r=0){let c=0,i=r;const s=t.filter((n=>n.includes(e))).map((t=>{const r=n.indexOf(t,c)+t.indexOf(e);return r>c&&(c=r),r}));if(s.includes(i))for(;s.includes(i);)i=n.indexOf(e,i+1);return i}function r(r="",c="extension",i=((e="")=>e),s={},l={}){const o=r.includes("\r")?"\r\n":"\n",p=r.match(/(?<!\\|\>\s*)```[^```]+\\?```(\r?\n)?/g)||[],a=Array.from(new Set(r.match(/\&#\w+;/g)||[])),f=a.map((e=>escape(e))),d=p.reduce(((e,n)=>e.replace(n,"")),e(r)),$=a.reduce(((e,t)=>e.replace(new RegExp(n(t),"g"),escape(t))),d),u=$.match(/(?!\r?\n)(\s+|\t+)?\>\[\!.*\r?\n((\s+|\t+)?\>(?!\[\!).*\r?\n?){1,}/g)||[],g=Object.keys(s).filter((e=>"VIDEO"===s[e]))[0]||"VIDEO",m=$.match(new RegExp(`\\>\\[\\!${g}\\]\\((.*)\\)`,"g"))||[];let h=e(r);for(const e of u){const r=e.split(/\r?\n/).filter((e=>e.length>0&&/[^\s]+/.test(e))),d=(r[0].match(/\>\[\!(.*)\]/)||[])[1]||"",$=r[0].replace(/\>\[.*/,""),u=`${o}${$}`,g=`${$}${i(r.slice(1,r.length).map((e=>{let t=e.replace(/^(\s+|\t+)?\>/,"").trim();for(const e of a)t.includes(e)&&(t=t.replace(new RegExp(n(e),"g"),escape(e)));return t})).filter(((e,n)=>0!==n||e.length>0)).join(o).trim()).split(/\r?\n/).join(u)}`,m=(d in s?s[d]:d).toLowerCase().replace(/\s/g,""),x=r.map((e=>{let t=e;for(const e of f)t.includes(e)&&(t=t.replace(new RegExp(n(e),"g"),unescape(e)));return t})).join(o);let w=h.indexOf(x);p.length>0&&(w=t(x,h,p,w)),h=`${h.slice(0,w)}${$}<div class="${c} ${m}">${u}<div>${d in l?l[d]:d}</div>${u}<div>${o}${g.replace(/\r?\n$/,"")}${u}</div>${u}</div>${u}${h.slice(w+x.length)}`}for(const e of m){const n=e.replace(/^.*\(|\).*$/g,"");let r=h.indexOf(e);p.length>0&&(r=t(e,h,p,r)),h=`${h.slice(0,r)}<div class="${c} video"><iframe allowfullscreen embedded-video src="${n}" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"><source src="${n}" type="" /><p>Your browser does not support the iframe element.</p></iframe></div>${h.slice(r+e.length)}`}for(const e of f)h=h.replace(new RegExp(n(e),"g"),unescape(e));return h.trim()}export{r as afm};