function e(e=""){return e.replace(/[\-\[\]{}()*+?.,\\\^\$|#]/g,"\\$&")}function t(e="",t="",n=[],r=0){let i=0,s=r;const l=n.filter((t=>t.includes(e))).map((n=>{const r=t.indexOf(n,i)+n.indexOf(e);return r>i&&(i=r),r}));if(l.includes(s))for(;l.includes(s);)s=t.indexOf(e,s+1);return s}function n(n="",r="extension",i=((e="")=>e),s={},l={}){const c=n.includes("\r")?"\r\n":"\n",o=Array.from(new Set(n.match(/\&#\w+;/g)||[])),f=o.map((e=>escape(e))),p=n.split(/(?<!`|>)`{3,3}(?!`)/g).filter(((e,t)=>t%2==1)).map((e=>`\`\`\`${e}\`\`\``)),a=o.reduce(((t,n)=>t.replace(new RegExp(e(n),"g"),escape(n))),n),d=a.match(/(?!\r?\n)(\s+|\t+)?\>\[\!.*\r?\n((\s+|\t+)?\>(?!\[\!).*\r?\n?){1,}/g)||[],$=Object.keys(s).filter((e=>"VIDEO"===s[e]))[0]||"VIDEO",g=a.match(new RegExp(`\\>\\[\\!${$}\\]\\((.*)\\)`,"g"))||[];let u=function(e=""){return JSON.parse(JSON.stringify(e))}(n);for(const t of d){let n=t;const f=p.filter((e=>t.includes(e)));if(f.length>0)for(const e of f)n=n.replace(e,`[AFMSKIP]${e}[/AFMSKIP]`);const a=t.split(/\r?\n/).filter((e=>e.length>0&&/[^\s]+/.test(e))),d=(a[0].match(/\>\[\!(.*)\]/)||[])[1]||"",$=a[0].replace(/\>\[.*/,""),g=`${c}${$}`,m=`${$}${i(a.slice(1,a.length).map((t=>{let n=t.replace(/^(\s+|\t+)?\>/,"").trimEnd();for(const t of o)n.includes(t)&&(n=n.replace(new RegExp(e(t),"g"),escape(t)));return n})).filter(((e,t)=>0!==t||e.length>0)).join(c).trim()).split(/\r?\n/).join(g)}`,h=(d in s?s[d]:d).toLowerCase().replace(/\s/g,"");let w=u.indexOf(t);if(-1===w)throw new Error(`Could not find string: ${t}`);u=`${u.slice(0,w)}${$}<div class="${r} ${h}">${g}<div>${d in l?l[d]:d}</div>${g}<div>${c}${m.replace(/\r?\n$/,"")}${g}</div>${g}</div>${g}${u.slice(w+t.length)}`}for(const e of g){const n=e.replace(/^.*\(|\).*$/g,"");let i=u.indexOf(e);p.length>0&&(i=t(e,u,p,i)),u=`${u.slice(0,i)}<div class="${r} video"><iframe allowfullscreen embedded-video src="${n}" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"><source src="${n}" type="" /><p>Your browser does not support the iframe element.</p></iframe></div>${u.slice(i+e.length)}`}for(const t of f)u=u.replace(new RegExp(e(t),"g"),unescape(t));return u.trim()}export{n as afm};