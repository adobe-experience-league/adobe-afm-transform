function e(e="",t="extension",r=((e="")=>e+"\n"),i={},n={}){const s=e.includes("\r"),l=s?"\r\n":"\n",o=(e.match(/`{3,3}[^`]+`{3,3}(\r?\n)?/g)||[]).reduce(((e,t)=>e.replace(t,"")),e).match(/(\s+|\t+)?\>\[\!.*\r?\n((\s+|\t+)?\>[^\[].*\r?\n?){1,}/g)||[],c=Object.keys(i).filter((e=>"VIDEO"===i[e]))[0]||"VIDEO",$=new RegExp(`(?<!\`\`\`\\r?\\n(\\s+|\\t+)?)\\>\\[\\!${c}\\]\\((.*)\\)`,"g");let a=e;for(const e of o){const o=e.split(s?/\r\n/:/\n/).filter((e=>e.length>0&&/[^\s]+/.test(e))),c=(o[0].match(/\>\[\!(.*)\]/)||[])[1]||"",$=o[0].replace(/\>\[.*/,""),d=o.slice(1,o.length).map((e=>e.replace(/^(\s+|\t+)?\>/,""))).filter(((e,t)=>0!==t||e.length>0)).join(l).trim(),p=(c in i?i[c]:c).toLowerCase().replace(/\s/g,"");a=a.replace(o.join(l),`${$}<div class="${t} ${p}">${l}${$}<div>${c in n?n[c]:c}</div>${l}${$}<div>${l}${$}${r(d)}${$}</div>${l}${$}</div>${l}`)}return a=a.replace($,`<div class="${t} video"><iframe allowfullscreen embedded-video src="$2" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"><source src="$2" type="" /><p>Your browser does not support the iframe element.</p></iframe></div>`),a}export{e as afm};